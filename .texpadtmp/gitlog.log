This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015) (preloaded format=pdftex 2015.10.3)  24 MAR 2016 12:49
entering extended mode
 restricted \write18 enabled.
 file:line:error style messages enabled.
 %&-line parsing enabled.
**/Users/retnolarasati/GitHub/Traffic/gitlog.tex
(/Users/retnolarasati/GitHub/Traffic/gitlog.tex
/Users/retnolarasati/GitHub/Traffic/gitlog.tex:1: Undefined control sequence.
l.1 \usepackage
               {tabu}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:2: Undefined control sequence.
l.2 \begin
          {center}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:3: Undefined control sequence.
l.3 \begin
          {longtabu} to \textwidth {|
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:3: Undefined control sequence.
l.3 \begin{longtabu} to \textwidth
                                   {|
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:7: Undefined control sequence.
l.7     \hline
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:8: Undefined control sequence.
l.8     \textbf
               {Author} & \textbf{Date} & \textbf{Message} \ \hline
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:8: Misplaced alignment tab character &.
l.8     \textbf{Author} &
                          \textbf{Date} & \textbf{Message} \ \hline
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:8: Undefined control sequence.
l.8     \textbf{Author} & \textbf
                                 {Date} & \textbf{Message} \ \hline
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:8: Misplaced alignment tab character &.
l.8     \textbf{Author} & \textbf{Date} &
                                          \textbf{Message} \ \hline
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:8: Undefined control sequence.
l.8     \textbf{Author} & \textbf{Date} & \textbf
                                                 {Message} \ \hline
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:8: Undefined control sequence.
l.8 ...& \textbf{Date} & \textbf{Message} \ \hline
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:9: Misplaced alignment tab character &.
l.9 retnolaras &
                 2016-01-24 & first commit \\ \hline
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

/Users/retnolarasati/GitHub/Traffic/gitlog.tex:9: Misplaced alignment tab character &.
l.9 retnolaras & 2016-01-24 &
                              first commit \\ \hline
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

)
Runaway argument?
 \hline Daniel Mendoza & 2016-01-25 & Update README.md \\ \hline retn\ETC.
! File ended while scanning use of \\.
<inserted text> 
                \par 
<*> /Users/retnolarasati/GitHub/Traffic/gitlog.tex
                                                  
I suspect you have forgotten a `}', causing me
to read past where you wanted me to stop.
I'll try to recover; but if the error is serious,
you'd better type `E' or `X' now and fix your file.

! Emergency stop.
<*> /Users/retnolarasati/GitHub/Traffic/gitlog.tex
                                                  
*** (job aborted, no legal \end found)

!  ==> Fatal error occurred, no output PDF file produced!
